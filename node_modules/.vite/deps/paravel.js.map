{
  "version": 3,
  "sources": ["../../paravel/dist/paravel.esm.js", "../../isomorphic-ws/browser.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/util/EventBus.ts\nvar _EventBus = class {\n  listeners = {};\n  addListener(name, handler) {\n    this.listeners[name] = this.listeners[name] || [];\n    this.listeners[name].push(handler);\n    return () => this.removeListener(name, handler);\n  }\n  addListeners(config) {\n    const callbacks = [];\n    for (const [name, handler] of Object.entries(config)) {\n      callbacks.push(this.addListener(name, handler));\n    }\n    return () => callbacks.forEach((unsubscribe) => unsubscribe());\n  }\n  removeListener(name, handler) {\n    this.listeners[name] = (this.listeners[name] || []).filter((h) => h !== handler);\n  }\n  clear() {\n    this.listeners = {};\n  }\n  emit(k, ...payload) {\n    for (const handler of this.listeners[k] || []) {\n      handler(...payload);\n    }\n    for (const handler of this.listeners[_EventBus.ANY] || []) {\n      handler(k, ...payload);\n    }\n  }\n};\nvar EventBus = _EventBus;\n__publicField(EventBus, \"ANY\", Math.random().toString().slice(2));\n\n// src/util/Deferred.ts\nvar defer = () => {\n  let resolve, reject;\n  const p = new Promise((resolve_, reject_) => {\n    resolve = resolve_;\n    reject = reject_;\n  });\n  return Object.assign(p, { resolve, reject });\n};\n\n// src/util/Socket.ts\nimport WebSocket from \"isomorphic-ws\";\nvar _Socket = class {\n  ws;\n  url;\n  ready;\n  timeout;\n  queue;\n  bus;\n  status;\n  error;\n  _onOpen;\n  _onMessage;\n  _onError;\n  _onClose;\n  constructor(url) {\n    this.url = url;\n    this.ready = defer();\n    this.queue = [];\n    this.bus = new EventBus();\n    this.status = _Socket.STATUS.NEW;\n    this._onOpen = () => {\n      this.error = void 0;\n      this.status = _Socket.STATUS.READY;\n      this.ready.resolve();\n      this.bus.emit(\"open\");\n    };\n    this._onMessage = (event) => {\n      this.queue.push(event.data);\n      if (!this.timeout) {\n        this.handleMessagesAsync();\n      }\n    };\n    this._onError = (error) => {\n      this.error = error;\n      this.bus.emit(\"error\", error);\n    };\n    this._onClose = () => {\n      this.disconnect();\n      this.ready.reject();\n      this.status = _Socket.STATUS.CLOSED;\n      this.bus.emit(\"close\");\n    };\n  }\n  async connect() {\n    if ([_Socket.STATUS.NEW, _Socket.STATUS.CLOSED].includes(this.status)) {\n      if (this.ws) {\n        console.error(\"Attempted to connect when already connected\", this);\n      }\n      this.ready = defer();\n      this.ws = new WebSocket(this.url);\n      this.status = _Socket.STATUS.PENDING;\n      this.ws.addEventListener(\"open\", this._onOpen);\n      this.ws.addEventListener(\"message\", this._onMessage);\n      this.ws.addEventListener(\"error\", this._onError);\n      this.ws.addEventListener(\"close\", this._onClose);\n    }\n    await this.ready.catch(() => null);\n  }\n  disconnect() {\n    if (this.ws) {\n      const ws = this.ws;\n      this.ready.then(() => ws.close(), () => null);\n      this.ws.removeEventListener(\"open\", this._onOpen);\n      this.ws.removeEventListener(\"message\", this._onMessage);\n      this.ws.removeEventListener(\"error\", this._onError);\n      this.ws.removeEventListener(\"close\", this._onClose);\n      this.ws = void 0;\n    }\n  }\n  cleanup() {\n    this.disconnect();\n    this.bus.clear();\n  }\n  handleMessages() {\n    for (const json of this.queue.splice(0, 10)) {\n      let message;\n      try {\n        message = JSON.parse(json);\n      } catch (e) {\n        continue;\n      }\n      this.bus.emit(\"message\", this.url, message);\n    }\n    if (this.queue.length > 0) {\n      this.handleMessagesAsync();\n    } else {\n      this.timeout = void 0;\n    }\n  }\n  handleMessagesAsync() {\n    this.timeout = setTimeout(() => this.handleMessages(), 10);\n  }\n  send(message) {\n    if (this.status === _Socket.STATUS.READY) {\n      if (this.ws?.readyState !== 1) {\n        console.warn(\"Send attempted before socket was ready\", this);\n      }\n      this.ws?.send(JSON.stringify(message));\n    }\n  }\n};\nvar Socket = _Socket;\n__publicField(Socket, \"STATUS\", {\n  NEW: \"new\",\n  PENDING: \"pending\",\n  CLOSED: \"closed\",\n  READY: \"ready\"\n});\n\n// src/Executor.ts\nvar createFilterId = (filters) => [Math.random().toString().slice(2, 6), filters.map(describeFilter).join(\":\")].join(\"-\");\nvar describeFilter = ({ kinds = [], ...filter }) => {\n  const parts = [];\n  parts.push(kinds.join(\",\"));\n  for (const [key, value] of Object.entries(filter)) {\n    if (value instanceof Array) {\n      parts.push(`${key}[${value.length}]`);\n    } else {\n      parts.push(key);\n    }\n  }\n  return \"(\" + parts.join(\",\") + \")\";\n};\nvar Executor = class {\n  target;\n  constructor(target) {\n    this.target = target;\n  }\n  subscribe(filters, { onEvent, onEose }) {\n    const id = createFilterId(filters);\n    const unsubscribe = this.target.bus.addListeners({\n      EVENT: (url, subid, e) => subid === id && onEvent?.(url, e),\n      EOSE: (url, subid) => subid === id && onEose?.(url)\n    });\n    this.target.send(\"REQ\", id, ...filters);\n    return {\n      unsubscribe: () => {\n        this.target.send(\"CLOSE\", id);\n        unsubscribe();\n      }\n    };\n  }\n  publish(event, { onOk, onError }) {\n    const unsubscribe = this.target.bus.addListeners({\n      OK: (url, id, ...payload) => id === event.id && onOk(url, ...payload),\n      ERROR: (url, id, ...payload) => id === event.id && onError(url, ...payload)\n    });\n    this.target.send(\"EVENT\", event);\n    return { unsubscribe };\n  }\n  count(filters, { onCount }) {\n    const id = createFilterId(filters);\n    const unsubscribe = this.target.bus.addListeners({\n      COUNT: (url, subid, ...payload) => {\n        if (subid === id) {\n          onCount(url, ...payload);\n          unsubscribe();\n        }\n      }\n    });\n    this.target.send(\"COUNT\", id, ...filters);\n    return { unsubscribe };\n  }\n  handleAuth({ onAuth, onOk }) {\n    let event;\n    const unsubscribe = this.target.bus.addListeners({\n      AUTH: async (url, challenge) => {\n        event = await onAuth(url, challenge);\n      },\n      OK: (url, id, ok, message) => {\n        if (id === event?.id) {\n          event = null;\n          onOk(url, id, ok, message);\n        }\n      }\n    });\n    return { unsubscribe };\n  }\n};\n\n// src/Plex.ts\nvar Plex = class {\n  constructor(urls, socket) {\n    this.urls = urls;\n    this.socket = socket;\n    this.bus = new EventBus();\n    this.unsubscribe = socket.bus.addListeners({\n      message: (websocketUrl, [{ relays }, [verb, ...payload]]) => {\n        this.bus.emit(verb, relays[0], ...payload);\n      }\n    });\n  }\n  async send(...payload) {\n    await this.socket.connect();\n    this.socket.send([{ relays: this.urls }, payload]);\n  }\n  cleanup() {\n    this.bus.clear();\n    this.unsubscribe();\n  }\n};\n\n// src/Pool.ts\nvar Pool = class {\n  data;\n  constructor() {\n    this.data = /* @__PURE__ */ new Map();\n    this.bus = new EventBus();\n  }\n  has(url) {\n    return this.data.has(url);\n  }\n  get(url) {\n    if (!this.data.has(url)) {\n      const socket = new Socket(url);\n      this.data.set(url, socket);\n      this.bus.emit(\"init\", { url });\n      socket.bus.addListeners({\n        open: () => this.bus.emit(\"open\", { url }),\n        close: () => this.bus.emit(\"close\", { url })\n      });\n    }\n    return this.data.get(url);\n  }\n  remove(url) {\n    const socket = this.data.get(url);\n    if (socket) {\n      socket.cleanup();\n      this.data.delete(url);\n    }\n  }\n  clear() {\n    for (const url of this.data.keys()) {\n      this.remove(url);\n    }\n  }\n};\n\n// src/Relay.ts\nvar Relay = class {\n  constructor(socket) {\n    this.socket = socket;\n    this.bus = new EventBus();\n    this.listeners = sockets.map((socket2) => {\n      return socket2.bus.addListener(\"message\", (url, [verb, ...payload]) => {\n        this.bus.emit(verb, url, ...payload);\n      });\n    });\n  }\n  async send(...payload) {\n    await this.socket.connect();\n    this.socket.send(payload);\n  }\n  cleanup() {\n    this.bus.clear();\n    this.listeners.map((unsubscribe) => unsubscribe());\n  }\n};\n\n// src/Relays.ts\nvar Relays = class {\n  sockets;\n  bus;\n  constructor(sockets2) {\n    this.sockets = sockets2;\n    this.bus = new EventBus();\n    this.listeners = sockets2.map((socket) => {\n      return socket.bus.addListener(\"message\", (url, [verb, ...payload]) => {\n        this.bus.emit(verb, url, ...payload);\n      });\n    });\n  }\n  send(...payload) {\n    this.sockets.forEach(async (socket) => {\n      await socket.connect();\n      socket.send(payload);\n    });\n  }\n  cleanup() {\n    this.bus.clear();\n    this.listeners.map((unsubscribe) => unsubscribe());\n  }\n};\nexport {\n  EventBus,\n  Executor,\n  Plex,\n  Pool,\n  Relay,\n  Relays,\n  Socket,\n  defer\n};\n", "// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n"],
  "mappings": "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",
  "names": ["__publicField", "ws"]
}
