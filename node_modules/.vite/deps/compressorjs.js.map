{
  "version": 3,
  "sources": ["../../compressorjs/dist/compressor.esm.js"],
  "sourcesContent": ["/*!\n * Compressor.js v1.1.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-10-05T02:32:40.212Z\n */\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar canvasToBlob = {exports: {}};\n\n/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n(function (module) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  (function (window) {\n\n    var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n\n    var hasBlobConstructor = window.Blob && function () {\n      try {\n        return Boolean(new Blob());\n      } catch (e) {\n        return false;\n      }\n    }();\n\n    var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100;\n      } catch (e) {\n        return false;\n      }\n    }();\n\n    var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n    var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n\n    var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n      var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n      matches = dataURI.match(dataURIPattern);\n\n      if (!matches) {\n        throw new Error('invalid data URI');\n      } // Default to text/plain;charset=US-ASCII\n\n\n      mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      } // Write the bytes of the string to an ArrayBuffer:\n\n\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        });\n      }\n\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType);\n    };\n\n    if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n      if (CanvasPrototype.mozGetAsFile) {\n        CanvasPrototype.toBlob = function (callback, type, quality) {\n          var self = this;\n          setTimeout(function () {\n            if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n              callback(dataURLtoBlob(self.toDataURL(type, quality)));\n            } else {\n              callback(self.mozGetAsFile('blob', type));\n            }\n          });\n        };\n      } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n        if (CanvasPrototype.msToBlob) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.msToBlob(type));\n              }\n            });\n          };\n        } else {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              callback(dataURLtoBlob(self.toDataURL(type, quality)));\n            });\n          };\n        }\n      }\n    }\n\n    if (module.exports) {\n      module.exports = dataURLtoBlob;\n    } else {\n      window.dataURLtoBlob = dataURLtoBlob;\n    }\n  })(window);\n})(canvasToBlob);\n\nvar toBlob = canvasToBlob.exports;\n\nvar isBlob = function isBlob(value) {\n  if (typeof Blob === 'undefined') {\n    return false;\n  }\n\n  return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n};\n\nvar DEFAULTS = {\n  /**\n   * Indicates if output the original image instead of the compressed one\n   * when the size of the compressed image is greater than the original one's\n   * @type {boolean}\n   */\n  strict: true,\n\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * Sets how the size of the image should be resized to the container\n   * specified by the `width` and `height` options.\n   * @type {string}\n   */\n  resize: 'none',\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * Files whose file type is included in this list,\n   * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n   * @type {string\uFF5CArray}\n   */\n  convertTypes: ['image/png'],\n\n  /**\n   * PNG files over this size (5 MB by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) {\n   *   context.fillStyle = '#fff';\n   * }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) {\n   *   context.filter = 'grayscale(100%)';\n   * }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) {\n   *   console.log(file);\n   * }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) {\n   *   console.log(err.message);\n   * }\n   */\n  error: null\n};\n\nvar IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nvar WINDOW = IS_BROWSER ? window : {};\n\n/**\n * Check if the given value is a positive number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n */\n\nvar isPositiveNumber = function isPositiveNumber(value) {\n  return value > 0 && value < Infinity;\n};\nvar slice = Array.prototype.slice;\n/**\n * Convert array-like or iterable object to an array.\n * @param {*} value - The value to convert.\n * @returns {Array} Returns a new array.\n */\n\nfunction toArray(value) {\n  return Array.from ? Array.from(value) : slice.call(value);\n}\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\n\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @returns {boolean} Returns the image extension.\n */\n\nfunction imageTypeToExtension(value) {\n  var extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  return \".\".concat(extension);\n}\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\nvar btoa = WINDOW.btoa;\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var chunks = [];\n  var chunkSize = 8192;\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n    // eslint-disable-next-line prefer-spread\n    chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\nfunction resetAndGetOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation; // Ignores range error when the image does not have correct Exif information\n\n  try {\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n          // 8 is the offset of the current tag's value\n          _offset += 8; // Get the original orientation value\n\n          orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180\u00B0\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90\u00B0\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90\u00B0\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90\u00B0\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90\u00B0\n\n    case 8:\n      rotate = -90;\n      break;\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n/**\n * Normalize decimal number.\n * Check out {@link https://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\n\nfunction getAdjustedSizes(_ref) {\n  var aspectRatio = _ref.aspectRatio,\n      height = _ref.height,\n      width = _ref.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n  var isValidWidth = isPositiveNumber(width);\n  var isValidHeight = isPositiveNumber(height);\n\n  if (isValidWidth && isValidHeight) {\n    var adjustedWidth = height * aspectRatio;\n\n    if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidWidth) {\n    height = width / aspectRatio;\n  } else if (isValidHeight) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nvar ArrayBuffer$1 = WINDOW.ArrayBuffer,\n    FileReader = WINDOW.FileReader;\nvar URL = WINDOW.URL || WINDOW.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\nvar AnotherCompressor = WINDOW.Compressor;\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar Compressor = /*#__PURE__*/function () {\n  /**\n   * The constructor of Compressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function Compressor(file, options) {\n    _classCallCheck(this, Compressor);\n\n    this.file = file;\n    this.image = new Image();\n    this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n    this.aborted = false;\n    this.result = null;\n    this.init();\n  }\n\n  _createClass(Compressor, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var file = this.file,\n          options = this.options;\n\n      if (!isBlob(file)) {\n        this.fail(new Error('The first argument must be a File or Blob object.'));\n        return;\n      }\n\n      var mimeType = file.type;\n\n      if (!isImageType(mimeType)) {\n        this.fail(new Error('The first argument must be an image File or Blob object.'));\n        return;\n      }\n\n      if (!URL || !FileReader) {\n        this.fail(new Error('The current browser does not support image compression.'));\n        return;\n      }\n\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n\n      if (URL && !options.checkOrientation) {\n        this.load({\n          url: URL.createObjectURL(file)\n        });\n      } else {\n        var reader = new FileReader();\n        var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n        this.reader = reader;\n\n        reader.onload = function (_ref) {\n          var target = _ref.target;\n          var result = target.result;\n          var data = {};\n\n          if (checkOrientation) {\n            // Reset the orientation value to its default value 1\n            // as some iOS browsers will render image with its orientation\n            var orientation = resetAndGetOrientation(result);\n\n            if (orientation > 1 || !URL) {\n              // Generate a new URL which has the default orientation value\n              data.url = arrayBufferToDataURL(result, mimeType);\n\n              if (orientation > 1) {\n                _extends(data, parseOrientation(orientation));\n              }\n            } else {\n              data.url = URL.createObjectURL(file);\n            }\n          } else {\n            data.url = result;\n          }\n\n          _this.load(data);\n        };\n\n        reader.onabort = function () {\n          _this.fail(new Error('Aborted to read the image with FileReader.'));\n        };\n\n        reader.onerror = function () {\n          _this.fail(new Error('Failed to read the image with FileReader.'));\n        };\n\n        reader.onloadend = function () {\n          _this.reader = null;\n        };\n\n        if (checkOrientation) {\n          reader.readAsArrayBuffer(file);\n        } else {\n          reader.readAsDataURL(file);\n        }\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(data) {\n      var _this2 = this;\n\n      var file = this.file,\n          image = this.image;\n\n      image.onload = function () {\n        _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n          naturalWidth: image.naturalWidth,\n          naturalHeight: image.naturalHeight\n        }));\n      };\n\n      image.onabort = function () {\n        _this2.fail(new Error('Aborted to load the image.'));\n      };\n\n      image.onerror = function () {\n        _this2.fail(new Error('Failed to load the image.'));\n      }; // Match all browsers that use WebKit as the layout engine in iOS devices,\n      // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n\n      if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n        // Fix the `The operation is insecure` error (#57)\n        image.crossOrigin = 'anonymous';\n      }\n\n      image.alt = file.name;\n      image.src = data.url;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref2) {\n      var _this3 = this;\n\n      var naturalWidth = _ref2.naturalWidth,\n          naturalHeight = _ref2.naturalHeight,\n          _ref2$rotate = _ref2.rotate,\n          rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n          _ref2$scaleX = _ref2.scaleX,\n          scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n          _ref2$scaleY = _ref2.scaleY,\n          scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n      var file = this.file,\n          image = this.image,\n          options = this.options;\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n      var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n      var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n      var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n      var minWidth = Math.max(options.minWidth, 0) || 0;\n      var minHeight = Math.max(options.minHeight, 0) || 0;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var width = options.width,\n          height = options.height;\n\n      if (is90DegreesRotated) {\n        var _ref3 = [maxHeight, maxWidth];\n        maxWidth = _ref3[0];\n        maxHeight = _ref3[1];\n        var _ref4 = [minHeight, minWidth];\n        minWidth = _ref4[0];\n        minHeight = _ref4[1];\n        var _ref5 = [height, width];\n        width = _ref5[0];\n        height = _ref5[1];\n      }\n\n      if (resizable) {\n        aspectRatio = width / height;\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: maxWidth,\n        height: maxHeight\n      }, 'contain');\n\n      maxWidth = _getAdjustedSizes.width;\n      maxHeight = _getAdjustedSizes.height;\n\n      var _getAdjustedSizes2 = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minWidth,\n        height: minHeight\n      }, 'cover');\n\n      minWidth = _getAdjustedSizes2.width;\n      minHeight = _getAdjustedSizes2.height;\n\n      if (resizable) {\n        var _getAdjustedSizes3 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: width,\n          height: height\n        }, options.resize);\n\n        width = _getAdjustedSizes3.width;\n        height = _getAdjustedSizes3.height;\n      } else {\n        var _getAdjustedSizes4 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: width,\n          height: height\n        });\n\n        var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n        width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n        var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n        height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n      }\n\n      width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n      height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n      var destX = -width / 2;\n      var destY = -height / 2;\n      var destWidth = width;\n      var destHeight = height;\n      var params = [];\n\n      if (resizable) {\n        var srcX = 0;\n        var srcY = 0;\n        var srcWidth = naturalWidth;\n        var srcHeight = naturalHeight;\n\n        var _getAdjustedSizes5 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: naturalWidth,\n          height: naturalHeight\n        }, {\n          contain: 'cover',\n          cover: 'contain'\n        }[options.resize]);\n\n        srcWidth = _getAdjustedSizes5.width;\n        srcHeight = _getAdjustedSizes5.height;\n        srcX = (naturalWidth - srcWidth) / 2;\n        srcY = (naturalHeight - srcHeight) / 2;\n        params.push(srcX, srcY, srcWidth, srcHeight);\n      }\n\n      params.push(destX, destY, destWidth, destHeight);\n\n      if (is90DegreesRotated) {\n        var _ref6 = [height, width];\n        width = _ref6[0];\n        height = _ref6[1];\n      }\n\n      canvas.width = width;\n      canvas.height = height;\n\n      if (!isImageType(options.mimeType)) {\n        options.mimeType = file.type;\n      }\n\n      var fillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n      if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n        options.mimeType = 'image/jpeg';\n      }\n\n      if (options.mimeType === 'image/jpeg') {\n        fillStyle = '#fff';\n      } // Override the default fill color (#000, black)\n\n\n      context.fillStyle = fillStyle;\n      context.fillRect(0, 0, width, height);\n\n      if (options.beforeDraw) {\n        options.beforeDraw.call(this, context, canvas);\n      }\n\n      if (this.aborted) {\n        return;\n      }\n\n      context.save();\n      context.translate(width / 2, height / 2);\n      context.rotate(rotate * Math.PI / 180);\n      context.scale(scaleX, scaleY);\n      context.drawImage.apply(context, [image].concat(params));\n      context.restore();\n\n      if (options.drew) {\n        options.drew.call(this, context, canvas);\n      }\n\n      if (this.aborted) {\n        return;\n      }\n\n      var done = function done(result) {\n        if (!_this3.aborted) {\n          _this3.done({\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            result: result\n          });\n        }\n      };\n\n      if (canvas.toBlob) {\n        canvas.toBlob(done, options.mimeType, options.quality);\n      } else {\n        done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n      }\n    }\n  }, {\n    key: \"done\",\n    value: function done(_ref7) {\n      var naturalWidth = _ref7.naturalWidth,\n          naturalHeight = _ref7.naturalHeight,\n          result = _ref7.result;\n      var file = this.file,\n          image = this.image,\n          options = this.options;\n\n      if (URL && !options.checkOrientation) {\n        URL.revokeObjectURL(image.src);\n      }\n\n      if (result) {\n        // Returns original file if the result is greater than it and without size related options\n        if (options.strict && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n          result = file;\n        } else {\n          var date = new Date();\n          result.lastModified = date.getTime();\n          result.lastModifiedDate = date;\n          result.name = file.name; // Convert the extension to match its type\n\n          if (result.name && result.type !== file.type) {\n            result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n          }\n        }\n      } else {\n        // Returns original file if the result is null in some cases.\n        result = file;\n      }\n\n      this.result = result;\n\n      if (options.success) {\n        options.success.call(this, result);\n      }\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(err) {\n      var options = this.options;\n\n      if (options.error) {\n        options.error.call(this, err);\n      } else {\n        throw err;\n      }\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n\n        if (this.reader) {\n          this.reader.abort();\n        } else if (!this.image.complete) {\n          this.image.onload = null;\n          this.image.onabort();\n        } else {\n          this.fail(new Error('The compression process has been aborted.'));\n        }\n      }\n    }\n    /**\n     * Get the no conflict compressor class.\n     * @returns {Compressor} The compressor class.\n     */\n\n  }], [{\n    key: \"noConflict\",\n    value: function noConflict() {\n      window.Compressor = AnotherCompressor;\n      return Compressor;\n    }\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(options) {\n      _extends(DEFAULTS, options);\n    }\n  }]);\n\n  return Compressor;\n}();\n\nexport { Compressor as default };\n"],
  "mappings": "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",
  "names": ["window", "isBlob", "isPositiveNumber", "Compressor", "done"]
}
