{
  "version": 3,
  "sources": ["../../localforage-memoryStorageDriver/dist/localforage-memoryStorageDriver.es6.js"],
  "sourcesContent": ["function getSerializerPromise(localForageInstance) {\n    if (getSerializerPromise.result) {\n        return getSerializerPromise.result;\n    }\n    if (!localForageInstance || typeof localForageInstance.getSerializer !== 'function') {\n        Promise.reject(new Error('localforage.getSerializer() was not available! ' + 'localforage v1.4+ is required!'));\n    }\n    getSerializerPromise.result = localForageInstance.getSerializer();\n    return getSerializerPromise.result;\n}\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nvar storageRepository = {};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    var database = storageRepository[dbInfo.name] = storageRepository[dbInfo.name] || {};\n    var table = database[dbInfo.storeName] = database[dbInfo.storeName] || {};\n    dbInfo.db = table;\n\n    self._dbInfo = dbInfo;\n\n    return getSerializerPromise(self).then(function (serializer) {\n        dbInfo.serializer = serializer;\n    });\n}\n\nfunction clear(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var db = self._dbInfo.db;\n\n        for (var key in db) {\n            if (db.hasOwnProperty(key)) {\n                delete db[key];\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var db = self._dbInfo.db;\n        var result = db[key];\n\n        if (result) {\n            result = self._dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var db = self._dbInfo.db;\n\n        var iterationNumber = 1;\n        for (var key in db) {\n            if (db.hasOwnProperty(key)) {\n                var value = db[key];\n\n                if (value) {\n                    value = self._dbInfo.serializer.deserialize(value);\n                }\n\n                value = iterator(value, key, iterationNumber++);\n\n                if (value !== void 0) {\n                    return value;\n                }\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var db = self._dbInfo.db;\n        var result = null;\n        var index = 0;\n\n        for (var key in db) {\n            if (db.hasOwnProperty(key)) {\n                if (n === index) {\n                    result = key;\n                    break;\n                }\n                index++;\n            }\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var db = self._dbInfo.db;\n        var keys = [];\n\n        for (var key in db) {\n            if (db.hasOwnProperty(key)) {\n                keys.push(key);\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var db = self._dbInfo.db;\n        if (db.hasOwnProperty(key)) {\n            delete db[key];\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        function serializeAsync(value) {\n            return new Promise(function (resolve, reject) {\n                self._dbInfo.serializer.serialize(value, function (value, error) {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve(value);\n                    }\n                });\n            });\n        }\n\n        return serializeAsync(value).then(function (value) {\n            var db = self._dbInfo.db;\n            db[key] = value;\n            return originalValue;\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar memoryStorageDriver = {\n    _driver: 'memoryStorageDriver',\n    _initStorage: _initStorage,\n    // _supports: function() { return true; }\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\nexport default memoryStorageDriver;"],
  "mappings": "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",
  "names": ["key", "keys", "value"]
}
